[{"method":"mergeComponent","code":"function(component) {\n  // this function morphs the component parts for seperate files back into one structure.\n  component.forEach(function(componentPart) {\n    switch(componentPart.id) {\n      case \"meta.json\":\n        componentPart.id = \"meta\";\n        break;\n      case \"routes\":\n        if (typeof componentPart.contents === \"object\") {\n          var contents = {};\n          componentPart.contents.forEach(function(partFile) {\n            if (partFile.id.match(/\\.json$/)) {\n              partId = partFile.id.replace(/\\.json$/, '');\n              if (typeof contents[partId] === \"undefined\") {\n                contents[partId] = {\n                  name : partId\n                }\n              }\n              contents[partId]['route'] = JSON.parse(partFile.contents);\n            }\n            if (partFile.id.match(/\\.js$/)) {\n              partId = partFile.id.replace(/\\.js$/, '');\n              if (typeof contents[partId] === \"undefined\") {\n                contents[partId] = {\n                  name : partId\n                }\n              }\n              contents[partId]['code'] = partFile.contents;\n            }\n          });\n          componentPart.contents = JSON.stringify(Object.values(contents));\n        }\n        break;\n    }\n  });\n  return component;\n}"},{"method":"savePart","code":"function(basePath, part, contents) {\n  contents = JSON.parse(contents);\n  var results = [];\n\n  switch (part) {\n    case \"meta\":\n      return simplyRawApi.putRaw(basePath + \"/meta.json\", {}, JSON.stringify(contents));\n      break;\n    case \"routes\":\n      contents.forEach(function(componentPart) {\n        if (!componentPart.name) {\n          throw new Error(\"Required route name is empty\");\n        }\n        results.push(simplyRawApi.putRaw(\n          basePath + \"/\" + part + \"/\" + componentPart.name + \".json\", {}, \n          JSON.stringify(componentPart.route)\n        ).then(function() {\n          return simplyRawApi.putRaw(\n            basePath + \"/\" + part + \"/\" + componentPart.name + \".js\", {}, \n            componentPart.code\n          );\n        }));\n      });\n      return Promise.all(results)\n        .then(function(responses) {\n        for (var i=0; i<responses.length; i++) {\n          if (responses[i].status !== 200) {\n            return responses[i]; // return an error if we have one\n          }\n        }\n        return responses[0];\n      });\n      break;\n    default:\n      return simplyRawApi.putRaw(basePath + \"/\" + part, {}, JSON.stringify(contents));\n      break;\n  }\n}"}]